import { OpenAIClient, CompletionParams } from '@bytemain/openai-fetch';

import { DingBot } from '@/ding/bot';
import { markdown } from '@/ding/message';

export class OpenAI {
  openai: OpenAIClient;
  constructor(protected bot: DingBot) {
    this.openai = new OpenAIClient({
      apiKey: bot.env.OPENAI_API_KEY,
      options: {
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        credentials: undefined,
      },
    });
  }

  async createCompletion(
    prompt: string,
    options?: {
      stop?: string | string[];
    },
  ): Promise<string | undefined> {
    const params = {
      model: 'text-davinci-003',
      prompt: prompt,
      top_p: 1.0,
      temperature: 1,
      max_tokens: 1024,
      frequency_penalty: 0.0,
      presence_penalty: 0.0,
    } as CompletionParams;
    if (options?.stop) {
      params.stop = options.stop;
    }
    const response = await this.openai.createCompletion(params);
    const text = response.completion;
    return text;
  }

  async reply(text: string): Promise<void> {
    if (text) {
      await this.bot.reply(
        markdown(
          `Bot Reply`,
          `${text.trim()}\n\n> [Generated By OpenAI GPT-3](https://beta.openai.com/docs/models/gpt-3)`,
        ),
      );
    }
  }
}
